name: AWS deploy-monitor

on:
  push:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build:
    name: Build and Push packages to Octopus üêô
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version-generator.outputs.version }}

    env:
      OCTOPUS_URL: ${{ secrets.OCTOPUS_SERVER_URL }}
      OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
      OCTOPUS_SPACE: ${{ secrets.OCTOPUS_SPACE_NAME }}

    steps:
      - uses: actions/checkout@v3
      - name: Set version number
        id: version-generator
        run: echo "version=$(date +'%Y.%m.%d').$GITHUB_RUN_NUMBER" >> $GITHUB_OUTPUT
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.x'

      - name: Create artifacts folder
        run: |
          mkdir "artifacts"
          mkdir "artifacts/process-message"
              
      - name: Restore dependencies for process-message
        working-directory: aws/deploy-monitor/process-message/src/process-message
        run: dotnet restore

      - name: Publish process-message
        run: dotnet publish aws/deploy-monitor/process-message/src/process-message/process-message.csproj -r linux-x64 --configuration Release --no-restore --no-self-contained --output "artifacts/process-message"

      - name: Package deploy-monitor/process-message
        uses: OctopusDeploy/create-zip-package-action@v3
        with:
          package_id: 'deploy-monitor.process-message'
          version: ${{ steps.version-generator.outputs.version }}
          output_folder: artifacts
          base_path: artifacts/process-message
          files: |
            **/*.*

      - name: Package deploy-monitor/accept-message
        uses: OctopusDeploy/create-zip-package-action@v3
        with:
          package_id: 'deploy-monitor.accept-message'
          version: ${{ steps.version-generator.outputs.version }}
          output_folder: artifacts
          base_path: aws/deploy-monitor/accept-message
          files: |
            **/*.* 
          
      - name: Push packages to Octopus üêô
        uses: OctopusDeploy/push-package-action@v3
      
        with:  
          packages: |
            artifacts/deploy-monitor.accept-message.${{ steps.version-generator.outputs.version }}.zip
            artifacts/deploy-monitor.process-message.${{ steps.version-generator.outputs.version }}.zip

  Push-build-information:
       
      name: Push Build Information to Octopus üêô
      needs: build 
      runs-on: ubuntu-latest

      env:
        OCTOPUS_URL: ${{ secrets.OCTOPUS_SERVER_URL }}
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
        OCTOPUS_SPACE: ${{ secrets.OCTOPUS_SPACE_NAME }}
        
      steps:
      - name: Push Build Information
        uses: OctopusDeploy/push-build-information-action@v3
       
        with:
          version: ${{ needs.build.outputs.version }}
          packages: |
            deploy-monitor.accept-message
    
  Create-Octopus-Release:
  
      name: Create Octopus Release üêô
      needs: [build, Push-build-information]
      runs-on: ubuntu-latest
      
      env:
        OCTOPUS_URL: ${{ secrets.OCTOPUS_SERVER_URL }}
        OCTOPUS_API_KEY: ${{ secrets.OCTOPUS_API_KEY }}
        OCTOPUS_SPACE: ${{ secrets.OCTOPUS_SPACE_NAME }}
        
      steps:
      - uses: OctopusDeploy/create-release-action@v3
        id: "create-release"
        with:
          project: "DeployMonitor"
      outputs: 
       release_number: ${{ steps.create-release.outputs.release_number }}

            
